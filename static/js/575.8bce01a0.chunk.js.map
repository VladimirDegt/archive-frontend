{"version":3,"file":"static/js/575.8bce01a0.chunk.js","mappings":"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","sources":["components/Footer/Footer.styled.jsx","components/Footer/Footer.jsx","components/Skeletons/SkeletonAuth.jsx","schemas/validate-login.js","components/LoginForm/LoginForm.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Typography } from '@mui/material';\n\nexport const StyledTypography = styled(Typography)`\n  @media (max-width: 375px) {\n    font-size: 12px;\n  }\n`;\n","import logo from '../../img/logo.png';\nimport { StyledTypography } from './Footer.styled';\nconst { Box } = require('@mui/material');\n\nexport const Footer = () => {\n  return (\n    <footer>\n      <Box\n        sx={{\n          backgroundColor: 'rgb(48, 56, 70)',\n          paddingTop: 3,\n          paddingBottom: 3,\n          paddingLeft: 1,\n          paddingRight: 1,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Box\n          sx={{\n            width: 30,\n            height: 30,\n            borderRadius: '50%',\n            overflow: 'hidden',\n            marginRight: 2,\n          }}\n        >\n          <a\n            href=\"http://www.infocity.kharkov.ua/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ marginRight: 16 }}\n          >\n            <img src={logo} alt=\"Logo\" width=\"30\" height=\"30\" />\n          </a>\n        </Box>\n        <StyledTypography\n          paragraph\n          align=\"center\"\n          color=\"#FAFAFA\"\n          sx={{ marginBottom: 0 }}\n        >\n          Copyright © 2023 КП \"МІЦ\". Created by Volodymyr Dehtiarev\n        </StyledTypography>\n      </Box>\n    </footer>\n  );\n};\n","import { Container, Skeleton } from '@mui/material';\n\nexport const SkeletonAuth = ({ totalRow }) => {\n  return (\n    <Container\n      maxWidth=\"xl\"\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: 2,\n        marginTop: 2,\n        marginBottom: 2,\n      }}\n    >\n      <Skeleton\n        animation=\"wave\"\n        variant=\"rounded\"\n        sx={{ minWidth: 300, width: '100%' }}\n        height={30}\n      />\n      {[...Array(totalRow)].map((_, index) => (\n        <Skeleton\n          variant=\"rounded\"\n          animation=\"wave\"\n          sx={{ minWidth: 300, width: '100%' }}\n          height={73}\n          key={index}\n        />\n      ))}\n      <Skeleton\n        animation=\"wave\"\n        variant=\"rounded\"\n        sx={{ minWidth: 300, width: '100%' }}\n        height={30}\n      />\n    </Container>\n  );\n};\n","import * as Yup from 'yup';\n\nexport const SigninSchema = Yup.object().shape({\n  password: Yup.string()\n     .min(2, 'Довжина повинна бути більше двох символів')\n     .max(30, 'Дуже багато символів')\n     .required(\"Поле обов'язкове до заповнення\"),\n   email: Yup\n   .string()\n   .max(50, 'Довжина повинна бути більше двох символів')\n   .email('Невірний формат email')\n   .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, 'Невірний формат email')\n   .required(\"Поле обов'язкове до заповнення\"),\n });","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { Notify } from 'notiflix';\nimport { Formik, Form, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { red } from '@mui/material/colors';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { SigninSchema } from 'schemas/validate-login';\nimport { addToken, getNameUser, getStatusUser } from 'redux/users/reducer';\nimport { useLoginMutation } from 'utils/RTK-Query';\nimport { SkeletonAuth } from 'components/Skeletons/SkeletonAuth';\n\nexport const LoginForm = ({ handleClose, isOpen }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  const [login] = useLoginMutation();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      setIsLoading(true);\n      const response = await login(values);\n      setIsLoading(false);\n\n      dispatch(addToken(response.data.token));\n      dispatch(getNameUser(response.data.name));\n      dispatch(getStatusUser(response.data.status))\n      navigate('/archive', { replace: true });\n    } catch (error) {\n      Notify.failure('Будь ласка зареєструйтеся', {\n        position: 'center-top',\n        distance: '10px',\n      });\n    } finally {\n      resetForm();\n      handleClose();\n    }\n  };\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  return (\n    <Dialog open={isOpen} onClose={handleClose} aria-labelledby=\"registration\">\n      {isLoading ? (\n        <SkeletonAuth totalRow={2} sx={{ minWidth: 444 }} />\n      ) : (\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={SigninSchema}\n        >\n          {({ errors, touched }) => (\n            <Form>\n              <DialogTitle id=\"registration\" sx={{ textAlign: 'center' }}>\n                Login\n              </DialogTitle>\n              <DialogContent>\n                <Field\n                  autoFocus\n                  as={TextField}\n                  margin=\"dense\"\n                  name=\"email\"\n                  label=\"Email\"\n                  type=\"email\"\n                  fullWidth\n                />\n                {errors.email && touched.email ? (\n                  <Typography paragraph sx={{ color: red[500], minWidth: 444 }}>\n                    {errors.email}\n                  </Typography>\n                ) : null}\n                <Field\n                  as={TextField}\n                  margin=\"dense\"\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  fullWidth\n                />\n                {errors.password && touched.password ? (\n                  <Typography paragraph sx={{ color: red[500] }}>\n                    {errors.password}\n                  </Typography>\n                ) : null}\n              </DialogContent>\n              <DialogActions\n                sx={{\n                  paddingRight: 3,\n                  paddingLeft: 3,\n                  justifyContent: 'center',\n                }}\n              >\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button type=\"submit\">Log In</Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </Dialog>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { Container, Typography } from \"@mui/material\";\n\nexport const StyledContainer = styled(Container)`\n  @media (max-width: 767px) {\n    margin-left: 16px;\n    padding-top: 16px;\n  }\n`;\n\nexport const StyledTypography = styled(Typography)`\n@media (max-width: 767px) {\n  font-size: 20px;\n}\n`;","import { useState } from 'react';\nimport { Box, Button, Paper } from '@mui/material';\nimport { Footer } from 'components/Footer/Footer';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n// import { RegisterForm } from 'components/RegistrForm/RegistrForm';\nimport backgroundImage from '../../img/backgroundimage-full.jpg';\nimport { StyledContainer, StyledTypography } from './Home.styled';\n\nconst Home = () => {\n  // const [isOpenRegister, setIsOpenRegister] = useState(false);\n  const [isOpenLogin, setIsOpenLogin] = useState(false);\n\n  // const handleOpenRegistration = () => {\n  //   setIsOpenRegister(true);\n  // };\n\n  const handleOpenLogin = () => {\n    setIsOpenLogin(true);\n  };\n\n  const handleClose = () => {\n    // setIsOpenRegister(false);\n    setIsOpenLogin(false);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        minHeight: '100vh',\n      }}\n    >\n      <main>\n        <section>\n          <Paper\n            square={false}\n            sx={{\n              backgroundImage: `linear-gradient(to right, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.6)), url(${backgroundImage})`,\n              backgroundSize: 'cover',\n              backgroundRepeat: 'no-repeat',\n              backgroundPosition: 'center',\n              height: `calc(100vh - 78px)`,\n            }}\n          >\n            <StyledContainer\n              maxWidth=\"md\"\n              sx={{ marginLeft: 10, paddingTop: 15 }}\n            >\n              <StyledTypography\n                variant=\"h4\"\n                align=\"left\"\n                gutterBottom\n                sx={{ color: '#FAFAFA', marginBottom: 5 }}\n              >\n                <q>\n                  Архіви – це пам'ять нашого суспільства. Вони зберігають докази\n                  минулого, надають свідоцтва про наші здобутки та навчають нас\n                  наслідувати помилки. Архіви є спільним скарбом, який\n                  зберігається для нас та передається майбутнім поколінням.\n                </q>{' '}\n                - Джеймс Гленн, архівіст\n              </StyledTypography>\n              <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  sx={{ minWidth: 200, minHeight: 40 }}\n                  onClick={handleOpenLogin}\n                >\n                  вхід\n                </Button>\n                {/* <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  sx={{ minWidth: 200, minHeight: 40 }}\n                  onClick={handleOpenRegistration}\n                >\n                  реєстрація\n                </Button> */}\n              </Box>\n            </StyledContainer>\n          </Paper>\n          {/* {isOpenRegister && (\n            <RegisterForm handleClose={handleClose} isOpen={isOpenRegister} />\n          )} */}\n          {isOpenLogin && (\n            <LoginForm handleClose={handleClose} isOpen={isOpenLogin} />\n          )}\n        </section>\n      </main>\n      <Footer />\n    </Box>\n  );\n};\n\nexport default Home;\n"],"names":["StyledTypography","styled","Typography","Box","require","Footer","sx","backgroundColor","paddingTop","paddingBottom","paddingLeft","paddingRight","display","justifyContent","alignItems","width","height","borderRadius","overflow","marginRight","href","target","rel","style","src","logo","alt","paragraph","align","color","marginBottom","SkeletonAuth","totalRow","maxWidth","flexDirection","gap","marginTop","animation","variant","minWidth","Array","map","_","index","SigninSchema","Yup","shape","password","min","max","required","email","matches","LoginForm","handleClose","isOpen","useState","isLoading","setIsLoading","dispatch","useDispatch","useLoginMutation","login","navigate","useNavigate","handleSubmit","values","resetForm","response","addToken","data","token","getNameUser","name","getStatusUser","status","replace","Notify","position","distance","Dialog","open","onClose","initialValues","onSubmit","validationSchema","errors","touched","DialogTitle","id","textAlign","DialogContent","autoFocus","as","TextField","margin","label","type","fullWidth","red","DialogActions","Button","onClick","StyledContainer","Container","isOpenLogin","setIsOpenLogin","minHeight","Paper","square","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","marginLeft","gutterBottom","flexWrap"],"sourceRoot":""}